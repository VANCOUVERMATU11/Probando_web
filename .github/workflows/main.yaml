name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install modules
      run: yarn
    - name: Run ESLint
      run: yarn eslint . --ext .js

  api-call:
    # needs: lint
    # Esto lo podríamos tener si quisieramos que se ejecute después del lint y solo si se linteó bien 
    runs-on: ubuntu-latest
    steps:
    - name: Hacer POST
      run: |
          echo "SABEEEE"
          curl -X POST https://pokemon-api-vpmj.onrender.com/cards \
          -H "Content-Type: application/json" \
          -d '{"nombre": "Pokemon bakano",
                  "tipo": "Agua",
                  "faseEvolucion": "Fase 1",
                  "puntosSalud": 690,
                  "ataques": [
                  {
                    "nombre": "Lanzallamas",
                    "costoEnergia": ["Fuego", "Fuego", "Incolora"],
                    "danio": "100",
                    "descripcion": "Quema al Pokémon Defensor"
                  }
                  ]
              }' 
              echo "POST se ha hecho, esto aparece en el output de github?"
              echo "Código de respuesta recibido: $response_code"

  update-readme:
    needs: api-call
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Configurar Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
      - name: Actualizar versión y timestamp
        run: |
          # Encontrar y actualizar la versión
          current_line=$(grep -n 'Versión actual: v[0-9]\+\.[0-9]\+\.[0-9]\+' README.md | cut -d: -f1)
          current_version=$(grep -o 'Versión actual: v[0-9]\+\.[0-9]\+\.[0-9]\+' README.md | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
          
          IFS='.' read -r major minor patch <<< "$current_version"
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          
          # Actualizar la línea de versión
          sed -i "${current_line}s/v[0-9]\+\.[0-9]\+\.[0-9]\+/v$new_version/" README.md
          
          # Añadir timestamp (justo antes de ¡Buena suerte!)
          timestamp_line=$(grep -n '¡Buena suerte! ⚙️' README.md | cut -d: -f1)
          timestamp="Última ejecución: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          sed -i "${timestamp_line}i $timestamp\n" README.md
          
          echo "Versión actualizada de v$current_version a v$new_version"
          echo "Timestamp añadido: $timestamp"
          
      - name: Commit y push de los cambios
        run: |
          git add README.md
          git commit -m "Actualización automática: v$(grep -o 'Versión actual: v[0-9]\+\.[0-9]\+\.[0-9]\+' README.md | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')"
          git push