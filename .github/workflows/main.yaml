name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install modules
      run: yarn
    - name: Run ESLint
      run: yarn eslint . --ext .js

  api-call:
    # needs: lint
    # Esto lo podríamos tener si quisieramos que se ejecute después del lint y solo si se linteó bien 
    runs-on: ubuntu-latest
    steps:
    - name: Hacer POST
      run: |
          echo "SABEEEE"
          curl -X POST https://pokemon-api-vpmj.onrender.com/cards \
          -H "Content-Type: application/json" \
          -d '{"nombre": "Pokemon bakano",
                  "tipo": "Agua",
                  "faseEvolucion": "Fase 1",
                  "puntosSalud": 690,
                  "ataques": [
                  {
                    "nombre": "Lanzallamas",
                    "costoEnergia": ["Fuego", "Fuego", "Incolora"],
                    "danio": "100",
                    "descripcion": "Quema al Pokémon Defensor"
                  }
                  ]
              }' 
              echo "POST se ha hecho, esto aparece en el output de github?"
              echo "Código de respuesta recibido: $response_code"

  update-readme:
    # needs: api-call
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Configurar Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
    - name: Actualizar versión en README
      run: |
        # Extraer versión actual de forma segura
        current_version=$(grep -m1 -oP 'Versión actual: v\d+\.\d+\.\d+' README.md | awk -F'v' '{print $2}')
        
        # Verificar que se encontró una versión
        if [ -z "$current_version" ]; then
          echo "Error: No se encontró el patrón de versión en README.md"
          echo "Asegúrate de tener una línea como: Versión actual: v1.0.0"
          exit 1
        fi
        
        # Incrementar versión (patch)
        IFS='.' read -r major minor patch <<< "$current_version"
        new_version="$major.$minor.$((patch + 1))"
        
        # Actualizar archivo (versión compatible con todos los sistemas)
        perl -i -pe 's/Versión actual: v\K\d+\.\d+\.\d+/'"$new_version"'/' README.md
        
        echo "Versión actualizada de v$current_version a v$new_version"